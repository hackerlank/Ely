#LyX 2.1 created this file. For more info see http://www.lyx.org/
\lyxformat 474
\begin_document
\begin_header
\textclass scrbook
\options bibliography=totoc,index=totoc
\use_default_options true
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_math auto
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command bibtex
\index_command makeindex
\paperfontsize default
\spacing single
\use_hyperref false
\papersize a4paper
\use_geometry false
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
Ely Manual
\end_layout

\begin_layout Author
by consultit
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
consultit@katamail.com
\end_layout

\end_inset


\end_layout

\begin_layout Date
27/09/2015
\end_layout

\begin_layout Standard
\begin_inset CommandInset toc
LatexCommand tableofcontents

\end_inset


\end_layout

\begin_layout Chapter
Ely Introduction
\end_layout

\begin_layout Standard
Ely is a framework for developing games.
 It's based on the 
\begin_inset CommandInset href
LatexCommand href
name "Panda3d Game Engine"
target "http://www.panda3d.org/"

\end_inset

.
\end_layout

\begin_layout Standard
It is a 
\shape italic
Data Driven
\shape default
 and 
\shape italic
Component Based
\shape default
 framework written in C++.
 
\end_layout

\begin_layout Standard
The aim of Ely is to automate as much as possible the job to create a game,
 by relegating common and repetitive game structures to 
\shape italic
components
\shape default
.
\end_layout

\begin_layout Standard
The component's task is to give a game object a particular behavior in a
 given operative area.
 This behavior can be configured through a set of parameters supplied by
 configuration files.
\end_layout

\begin_layout Standard
Ely's 
\shape italic
Object Model
\shape default
 design has been freely inspired by the 
\shape italic
Chris Stoy
\shape default
 article 
\begin_inset Quotes eld
\end_inset


\shape italic
Game Object Component System
\shape default

\begin_inset Quotes erd
\end_inset

 in "
\shape italic
Game Programming Gems 6
\shape default
" book 
\begin_inset CommandInset citation
LatexCommand cite
key "key-1"

\end_inset

.
\end_layout

\begin_layout Standard
Ely framework is designed to be extensible, by creating new components in
 existing or new areas.
 
\end_layout

\begin_layout Standard
The framework library lies inside the 
\shape italic
ely
\shape default
 namespace.
\end_layout

\begin_layout Chapter
Conceptual Object Model
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
object model
\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "chap:Object-Model"

\end_inset


\end_layout

\begin_layout Standard
A game 
\shape smallcaps
object
\shape default
 
\begin_inset CommandInset ref
LatexCommand eqref
reference "sec:Object"

\end_inset

 is made up of a set of 
\shape smallcaps
component
\shape default
s 
\begin_inset CommandInset ref
LatexCommand eqref
reference "sec:Component"

\end_inset

.
 Each 
\shape smallcaps
component
\shape default
 gives the 
\shape smallcaps
Object
\shape default
 a particular behavior in a specific area: for example a 
\family typewriter
ely::RigidBody
\family default
 
\shape smallcaps
component
\shape default
 gives an 
\shape smallcaps
object
\shape default
 a rigid body behavior in the 
\shape italic
Physics
\shape default
 area, or the 
\family typewriter
ely::Sound3d
\family default
 
\shape smallcaps
component
\shape default
 makes an 
\shape smallcaps
object
\shape default
 able to emit sounds and belongs to the 
\shape italic
Audio
\shape default
 area.
 
\end_layout

\begin_layout Section
Component
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
component
\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "sec:Component"

\end_inset


\end_layout

\begin_layout Standard
A 
\shape smallcaps
component
\shape default
 is the building block of an 
\shape smallcaps
object
\shape default
 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Object"

\end_inset

.
 
\end_layout

\begin_layout Standard
An 
\shape smallcaps
object
\shape default
 is composed 
\shape italic
exclusively
\shape default
 of 
\shape smallcaps
component
\shape default
s.
 Therefore the 
\shape smallcaps
Object
\shape default
 structure and its behavior are completely determined by its 
\shape smallcaps
component
\shape default
s and relationships among them.
\end_layout

\begin_layout Standard
A 
\shape smallcaps
component
\shape default
 is identified by its 
\shape smallcaps
type
\shape italic

\begin_inset Index idx
status collapsed

\begin_layout Plain Layout

\shape up
component ! type
\end_layout

\end_inset


\shape default
, which identifies its structure, its behavior and the states it can assume.
 
\end_layout

\begin_layout Standard
Furthermore a 
\shape smallcaps
component
\shape default
 belongs to a 
\shape smallcaps
family type
\shape default

\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
component ! family type
\end_layout

\end_inset

, which represents a set of 
\shape smallcaps
component
\shape default
s that have conceptually related but 
\shape italic
mutually exclusive 
\shape default
behaviors in a given area
\shape italic
.
\end_layout

\begin_layout Standard
Any 
\shape smallcaps
object
\shape default
 can have 
\shape italic
only
\shape default
 one 
\shape smallcaps
component
\shape default
 of a specific 
\shape smallcaps
family type
\shape default
.
 That is, two 
\shape smallcaps
component
\shape default
s with different 
\shape smallcaps
type
\shape default
 but inside the same 
\shape smallcaps
family type
\shape default
, cannot coexist into the same 
\shape smallcaps
object
\shape default
.
\end_layout

\begin_layout Standard
Each 
\shape smallcaps
component
\shape default
 is identified by a 
\shape smallcaps
identifier
\shape default
 (
\shape smallcaps
id
\shape default
), which is assigned at creation time and is unique between all other 
\shape smallcaps
component
\shape default
s of all 
\shape smallcaps
object
\shape default
s participating in the game.
\end_layout

\begin_layout Standard
A 
\shape smallcaps
component
\shape default
 is created exclusively by a related 
\shape smallcaps
template
\shape default
 
\begin_inset CommandInset ref
LatexCommand eqref
reference "sec:Component-Template"

\end_inset

.
 
\end_layout

\begin_layout Subsubsection*

\series bold
Implementation
\end_layout

\begin_layout Quote
A generic 
\shape smallcaps
component
\shape default
 is implemented by 
\family typewriter
ely::Component
\family default
 base abstract class type.
 
\end_layout

\begin_layout Quote

\shape smallcaps
component
\shape default
s with different 
\shape smallcaps
type
\shape default
s, are implemented by deriving from it concrete classes which implement
 all its pure virtual member functions, possibly extending its interface
 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Component-interface"

\end_inset

.
 
\end_layout

\begin_layout Quote

\shape smallcaps
component
\shape default
's 
\shape smallcaps
type
\shape default
, 
\shape smallcaps
family
\shape default
 
\shape smallcaps
type
\shape default
 and 
\shape smallcaps
id
\shape default
 are implemented by 
\family typewriter
ely::ComponentType
\family default
, 
\family typewriter
ely::ComponentFamilyType
\family default
 and 
\family typewriter
ely::ComponentId
\family default
 types respectively (currently all 
\family typewriter
typedef
\family default
s to 
\family typewriter
std::string
\family default
).
\end_layout

\begin_layout Subsection
Component internal state
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
component ! internal state
\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "sec:Component-internal-state"

\end_inset


\end_layout

\begin_layout Standard
At any point in time, a 
\shape smallcaps
component
\shape default
 has an 
\shape italic
internal state
\shape default
, which determines its particular configuration and behavior (and consequently
 those of its owner 
\shape smallcaps
object
\shape default
).
 The internal state is assembled from a set of 
\shape italic
values
\shape default
, each one having its own type.
\end_layout

\begin_layout Standard
Some internal state values can be set up only at 
\shape smallcaps
component
\shape default
 creation time and cannot be changed during its lifetime, while others haven't
 this limitation, and can be modified through member functions.
\end_layout

\begin_layout Standard
Moreover all internal state values have hard-coded 
\shape italic
default
\shape default
s, which are used if not specified at creation and/or during lifetime of
 the 
\shape smallcaps
component
\shape default
.
 A default is usually the 
\shape italic
null
\shape default
 element of the type field of values, e.g.
 
\family typewriter
0
\family default
 for numbers (floats, integers), empty string (
\family typewriter
''
\family default
) for strings etc\SpecialChar \ldots{}
.
 But some state values must have a different default from null, otherwise
 the 
\shape smallcaps
component
\shape default
 could fall back in an inconsistent behavior.
\end_layout

\begin_layout Standard
At game startup time, 
\shape smallcaps
component
\shape default
's state values are specified through 
\shape italic
configuration parameters
\shape default
 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Components'-configuration-parame"

\end_inset

 specified in the 
\shape italic
game configuration file
\shape default
 
\begin_inset CommandInset ref
LatexCommand ref
reference "chap:Game-configuration-file"

\end_inset

.
\end_layout

\begin_layout Subsubsection*

\series bold
Implementation
\end_layout

\begin_layout Quote
The 
\end_layout

\begin_layout Quote
See API Documentation 
\begin_inset CommandInset ref
LatexCommand ref
reference "chap:API-Documentation"

\end_inset

 for details.
\end_layout

\begin_layout Subsection
Component interface
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
component ! interface
\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "sub:Component-interface"

\end_inset


\end_layout

\begin_layout Standard
Each 
\shape smallcaps
component
\shape default
 has a series of member functions that forms its interfaces.
 
\end_layout

\begin_layout Standard
There are two kind of interfaces: 
\end_layout

\begin_layout Itemize

\shape italic
protected
\shape default
: can be called 
\shape italic
only
\shape default
 from the other objects of Ely framework
\end_layout

\begin_layout Itemize

\shape italic
public
\shape default
: can be called from anywhere
\end_layout

\begin_layout Standard
The protected interface allows to initialize a 
\shape smallcaps
component
\shape default
 instance at creation time, with the parameters values specified by the
 configuration file 
\begin_inset CommandInset ref
LatexCommand ref
reference "chap:Game-configuration-file"

\end_inset

; it includes methods for setting the identifier of an instance and a reference
 to its owner 
\shape smallcaps
object
\shape default
 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Object"

\end_inset

.
 Moreover, there are methods for customizing the instance while being added/remo
ved to/from the owner 
\shape smallcaps
object
\shape default
 and to/from the game scene.
\end_layout

\begin_layout Subsubsection
protected interface
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
component ! protected interface
\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "sub:protected-interface"

\end_inset


\end_layout

\begin_layout Standard
The common protected interface is called to carry out 
\shape smallcaps
component
\shape default
 initialization during creation and to accomplish particular customization
 when 
\shape smallcaps
component
\shape default
 is being added/removed to/from both an 
\shape smallcaps
object
\shape default
 and the game scene.
\end_layout

\begin_layout Standard
Each specialized 
\shape smallcaps
component type 
\shape default
may extend the basic 
\end_layout

\begin_layout Subsubsection
public interface
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
component ! public interface
\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "sub:public-interface"

\end_inset


\end_layout

\begin_layout Section
Component Template
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
component template
\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "sec:Component-Template"

\end_inset


\end_layout

\begin_layout Standard
A 
\series bold
Component
\series default
 can be created 
\shape italic
only
\shape default
 through a 
\series bold
Template
\series default
, represented by 
\family typewriter
ely::ComponentTemplate
\family default
 base type.
\end_layout

\begin_layout Standard
A 
\series bold
Component
\series default
 
\series bold
Template
\series default
 has the ultimate responsibility to create and initialize a Component of
 a given type and family type, through a call to its ComponentTemplate::makeComp
onent() protected member function, which, in the Ely framework, can be (and
 is) called only from ComponentTemplateManager object through its doCreateCompon
ent() 
\begin_inset CommandInset ref
LatexCommand ref
reference "ComponentTemplateManager-doCreateComponent"

\end_inset

 member function.
\end_layout

\begin_layout Standard
A Component should be configured before its creation, so Templates allow
 to set/get any Component parameter 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Components'-configuration-parame"

\end_inset

 (both single and multiple valued), by storing their values into an internal
 storage (a table of (parameter-name, value) pairs).
\end_layout

\begin_layout Standard
Moreover a Template allows to (re)set hard coded default values for parameters
 that cannot have null values (ComponentTemplate::setParametersDefaults())
 .
\end_layout

\begin_layout Standard
Component Templates are managed by the Component Template Manager 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Component-Template-Manager"

\end_inset

.
\end_layout

\begin_layout Subsection*

\series bold
Implementation
\end_layout

\begin_layout Quote
A generic 
\shape smallcaps
component
\shape default
 is implemented by 
\family typewriter
ely::Component
\family default
 base abstract class type.
 
\end_layout

\begin_layout Quote

\shape smallcaps
component
\shape default
s with different 
\shape smallcaps
type
\shape default
s, are implemented by deriving from it concrete classes which implement
 all its pure virtual member functions, possibly extending its interface
 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Component-interface"

\end_inset

.
 
\end_layout

\begin_layout Quote

\shape smallcaps
component
\shape default
's 
\shape smallcaps
type
\shape default
, 
\shape smallcaps
family
\shape default
 
\shape smallcaps
type
\shape default
 and 
\shape smallcaps
id
\shape default
 are implemented by 
\family typewriter
ely::ComponentType
\family default
, 
\family typewriter
ely::ComponentFamilyType
\family default
 and 
\family typewriter
ely::ComponentId
\family default
 types (currently 
\family typewriter
typedef
\family default
s to 
\family typewriter
std::string
\family default
).
\end_layout

\begin_layout Section
Component Template Manager
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
Component Template Manager
\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "sec:Component-Template-Manager"

\end_inset


\end_layout

\begin_layout Standard
Component Templates 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Component-Template"

\end_inset

 are handled by the 
\shape italic
Component Template Manager
\shape default
, which is a singleton 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Singletons"

\end_inset

 global object.
\end_layout

\begin_layout Standard
Besides adding/removing/retrieving a Template, the manager offers possibility
 to reset Component configuration parameters 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Components'-configuration-parame"

\end_inset

 (stored in the Templates) to their default values.
\end_layout

\begin_layout Standard
All Component Templates used in the game must be stored into this manager,
 because they are retrieved only through it, and Components can be created
 only from the private 
\family typewriter
ComponentTemplateManager::doCreateComponent()
\begin_inset CommandInset label
LatexCommand label
name "ComponentTemplateManager-doCreateComponent"

\end_inset

 
\family default
member function, which, in the Ely framework, be (and is) called only from
 
\family typewriter
ObjectTemplateManager
\family default
 object through its 
\family typewriter
createObject()
\family default
 
\begin_inset CommandInset ref
LatexCommand ref
reference "ObjectTemplateManager-createObject"

\end_inset

 member function.
\end_layout

\begin_layout Section
Object
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
object
\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "sec:Object"

\end_inset


\end_layout

\begin_layout Standard
Objects, , represented by the 
\family typewriter
ely::Object
\family default
 type,
\end_layout

\begin_layout Section
Object Template
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
object ! template
\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "sec:Object-Template"

\end_inset


\end_layout

\begin_layout Standard
Objects' Templates
\end_layout

\begin_layout Section
Object Template Manager
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
Object Template Manager
\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "sec:Object-Template-Manager"

\end_inset


\end_layout

\begin_layout Standard
All Objects Templates used in the game must be stored into this manager,
 because they are retrieved only through it, and Components can be created
 only from the public 
\family typewriter
ObjectTemplateManager::createObject()
\family default

\begin_inset CommandInset label
LatexCommand label
name "ObjectTemplateManager-createObject"

\end_inset

 member function.
\end_layout

\begin_layout Chapter
Game configuration file
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
game configuration file
\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "chap:Game-configuration-file"

\end_inset


\end_layout

\begin_layout Standard
Game configuration file
\end_layout

\begin_layout Standard
Parameters' values are specified through a simple syntax, so to avoid complex
 parsing techniques, but allowing the use of C/C++ 
\family typewriter
string
\family default
 methods to interpret their meanings.
 
\end_layout

\begin_layout Standard
Usually a single That syntax follows this rules:
\end_layout

\begin_layout Section
Component's configuration parameters
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
component ! 
\shape up
configuration parameter
\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "sub:Components'-configuration-parame"

\end_inset


\end_layout

\begin_layout Standard
Almost all the 
\series bold
Component
\series default
s have 
\shape italic
configuration parameters
\shape default
 that are specified by the configuration file 
\begin_inset CommandInset ref
LatexCommand ref
reference "chap:Game-configuration-file"

\end_inset

.
 These parameters are used to tweak and customize 
\series bold
Component
\series default
's internal state configuration at creation time.
 
\end_layout

\begin_layout Standard
Several internal state values can be set up only 
\series bold
Component
\series default
 at creation time (through the parameters) and cannot be changed during
 its lifetime, while others haven't this limitation, and can be modified
 through member functions.
\end_layout

\begin_layout Standard
All parameters have hard-coded 
\shape italic
default
\shape default
 values, which are used if not specified at creation time.
 The default is usually the 
\shape italic
null
\shape default
 value of the parameter's field of values: 
\family typewriter
0
\family default
 for numbers (floats, integers), empty string (
\family typewriter
''
\family default
) for strings etc\SpecialChar \ldots{}
.
 But some parameters must have a different default from null, otherwise
 the Component could fall back in an inconsistent behavior.
\end_layout

\begin_layout Standard
At Component creation time, parameters are specified through the 
\shape italic
game configuration file
\shape default
 (usually 
\shape italic
game.xml
\shape default
)
\begin_inset CommandInset ref
LatexCommand ref
reference "chap:Game-configuration-file"

\end_inset

.
\end_layout

\begin_layout Standard
Any Component parameter has these attributes:
\end_layout

\begin_layout Itemize

\shape italic
name
\shape default
: it is chosen as self-documenting as possible, usually referring to the
 underlying logics or native Component attributes
\end_layout

\begin_layout Itemize

\shape italic
type
\shape default
: a parameter can be of 
\shape italic
single
\shape default
 valued or 
\shape italic
multiple
\shape default
 valued
\end_layout

\begin_layout Itemize

\shape italic
default
\shape default
: a hard-coded value used if the value is not specified
\end_layout

\begin_layout Standard
In the 
\shape italic
API Documentation
\shape default
 
\begin_inset CommandInset ref
LatexCommand ref
reference "chap:API-Documentation"

\end_inset

 for each Component parameter are reported the 
\shape italic
name
\shape default
, the 
\shape italic
type
\shape default
, the 
\shape italic
default
\shape default
 (if different from null) value and a 
\shape italic
note
\shape default
 (optional) describing how its value should be specified in the configuration
 file and/or other informations.
\end_layout

\begin_layout Chapter
Implementation details
\begin_inset CommandInset label
LatexCommand label
name "chap:Implementation-details"

\end_inset


\end_layout

\begin_layout Section
Singletons
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
singleton
\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "sec:Singletons"

\end_inset


\end_layout

\begin_layout Section
Smart pointers
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
smart pointer
\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "sec:Smart-pointers"

\end_inset


\end_layout

\begin_layout Section
Multi-threading
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
multi-threading
\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "sec:Multi-threading"

\end_inset


\end_layout

\begin_layout Chapter
API Documentation
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
API documentation
\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "chap:API-Documentation"

\end_inset


\end_layout

\begin_layout Standard
API Documentation
\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "key-1"

\end_inset

 Dickheiser, Michael: 
\shape italic
Game Programming Gems 6 First Edition
\shape default
.
 Charles River Media, 2006
\end_layout

\begin_layout Standard
\begin_inset CommandInset index_print
LatexCommand printindex
type "idx"

\end_inset


\end_layout

\end_body
\end_document
