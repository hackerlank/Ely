******************
*Ely Installation*
******************

Ely is a game development environment and, as such, it is not so trivial to install.
The overall environment is composed of many packages with from which Ely depends.
Some of these packages are supplied by the distribution (Debian or Ubuntu), while others 
are to be built manually.
Most manually installed packages, included Ely, uses 'GNU autotools' build system and are 
supplied in custom source repositories which are kept, as far as possible, up to date with 
the original ones (the only difference is the build system).
Moreover these custom repositories, included Ely, are in 'maintainer mode', meaning that you
need to use the full autotools suite to build the packages, although you can obtain distributable 
source packages (with make dist) which can be build with only the classic triad:

 $ configure
 $ make
 $ sudo make install
 
Note that in the following instructions: 
-packages are built into 'build-release' directories inside the source trees (but they 
can be anywhere in the filesystem)
-the $ sign means that commands are issued as normal user
-commands that could be run as root are prefixed with 'sudo' command

Mandatory packages
******************
These packages are mandatory for any of the later ones.
Install the minimun development environment from distribution:

 $ sudo apt-get install build-essential git autoconf automake \
    libtool checkinstall gnulib cvs
 
Install the latest 'GNU Autoconf Archive' source package:

 $ git clone git://git.sv.gnu.org/autoconf-archive.git

build and install with these commands:
 
 $ cd autoconf-archive
 $ ./bootstrap.sh
 $ ./configure --prefix=/usr
 $ make maintainer-all
 $ sudo make install

libRocket
*********
NOTE: The original source repository is 'https://github.com/libRocket/libRocket.git'.

Get source package:

 $ git clone https://github.com/consultit/my_librocket.git
 
install dependencies from distribution:

 $ sudo apt-get install libfreetype6-dev libx11-dev libxxf86vm-dev libgl1-mesa-dev \
    libglu1-mesa-dev python-dev libboost-python-dev
 
build with these commands:

 $ cd my_librocket
 $ autoreconf -i -v
 $ mkdir build-release
 $ cd build-release
 $ ../configure --enable-python --enable-lr-extra-samples
 $ make
 $ sudo make install

Bullet
******
NOTE: The original source repository is 'https://github.com/bulletphysics/bullet3.git'.   

Get source package:

 $ git clone https://github.com/consultit/my_bullet3.git
 
install dependencies from distribution:

 $ sudo apt-get install libgl1-mesa-dev libglu1-mesa-dev freeglut3-dev

build with these commands:

 $ cd my_bullet3
 $ autoreconf -i -v
 $ mkdir build-release
 $ cd build-release
 $ ../configure
 $ make
 $ sudo make install

RecastNavigation
*****************
NOTE: The original source repository is 'https://github.com/memononen/recastnavigation.git'.   

Get source package:

 $ git clone https://github.com/consultit/my_recastnavigation.git
 
install dependencies from distribution:

 $ sudo apt-get install libsdl1.2-dev

build with these commands:

 $ cd my_recastnavigation
 $ autoreconf -i -v
 $ mkdir build-release
 $ cd build-release
 $ ../configure
 $ make
 $ sudo make install

OpenSteer
*********
NOTE: The original source repository is 'http://svn.code.sf.net/p/opensteer/code/trunk'.   

Get source package:

 $ git clone https://github.com/consultit/my_opensteer.git
 
install dependencies from distribution:

 $ sudo apt-get install libgl1-mesa-dev libglu1-mesa-dev 

build with these commands:

 $ cd my_opensteer
 $ autoreconf -i -v
 $ mkdir build-release
 $ cd build-release
 $ ../configure
 $ make
 $ sudo make install

Panda3d
*******
Get source package (giving no CVS password):

 $ cvs -d:pserver:anonymous@panda3d.cvs.sourceforge.net:/cvsroot/panda3d login
 $ cvs -z3 -d:pserver:anonymous@panda3d.cvs.sourceforge.net:/cvsroot/panda3d co -P panda3d
 
install dependencies from distribution:

 $ sudo apt-get install pkg-config libeigen3-dev libswscale-dev fftw-dev \
    libfreetype6-dev libgl1-mesa-dev nvidia-cg-dev libode-dev libopenal-dev \
    libopencv-dev libvorbis-dev libssl-dev python-dev libxxf86dga-dev

build with these commands:

 $ cd panda3d
 $ makepanda/makepanda.py --verbose --everything --no-bullet --no-rocket \
 	--threads 2 --optimize 3 --installer --no-ffmpeg

install the package:
 
 $ sudo dpkg -i panda3d1.9_1.9.0_amd64.deb

Ely
***
Get source package:

 $ git clone https://github.com/consultit/Ely.git
 
install all the previous dependencies and build with these commands:

 $ cd Ely
 $ autoreconf -i -v
 $ mkdir build-release
 $ cd build-release
 $ ../configure
 $ make
 $ sudo make install

From now on read documentation for developing with Ely.
